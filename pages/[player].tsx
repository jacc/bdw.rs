import { useRouter } from "next/router";
import Head from "next/head";
import { HypixelAPI, Player } from "hypixel-api-v2";
import React from "react";
import { Header } from "../components/header";
import MainLayout from "../layouts/main";
const hypixel = new HypixelAPI(process.env.HYPIXEL!);

interface Props {
  playerData: Player;
  status: any;
}

export default function Post({ playerData, status }: Props) {
  const ones = Object.entries(playerData.stats["Bedwars"]).filter(
    (key, value) => {
      return key[0].includes("eight_one");
    }
  );

  const twos = Object.entries(playerData.stats["Bedwars"]).filter(
    (key, value) => {
      return key[0].includes("eight_two");
    }
  );
  const threes = Object.entries(playerData.stats["Bedwars"]).filter(
    (key, value) => {
      return key[0].includes("four_three");
    }
  );
  const fours = Object.entries(playerData.stats["Bedwars"]).filter(
    (key, value) => {
      return key[0].includes("four_four");
    }
  );

  return (
    <MainLayout>
      <Head>
        <title>{playerData.displayname}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <main>
        <div>
          <h1 className="text-left pt-4 text-xl pb-4 dark:text-white">
            stats for {playerData.displayname} (currently{" "}
            {status.online ? "online" : "offline"})
          </h1>
        </div>
      </main>
    </MainLayout>
  );
}

export async function getServerSideProps(params: {
  query: { player: string };
}) {
  const { player } = params.query;
  const playerData = await hypixel.player(player);
  const status = await hypixel.status(player);
  return { props: { playerData, status } };
}
